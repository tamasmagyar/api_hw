swagger: "2.0"
info:
  version: "1.0.1"
  title: Penztarca API
# during dev, should point to your local machine
host: localhost:10010
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  # - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
tags:
  - name: 'Users'
    description: Operations for Users
  - name: 'Authentication'
    description: Authentication operations
  - name: 'Products'
    description: Product operations
  - name: 'Store'
    description: Store operations
  - name: 'Balance'
    description: Balance change operations
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: X-Session-ID
paths:
  /users:
    # binds a127 app logic to a route
    x-swagger-router-controller: users
    post:
      description: Creates a new user with a pair of credentials
      # used as the method name of the controller
      operationId: createUser
      tags:
      - "Users"
      parameters:
        - name: user
          in: body
          description: The user to create
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CreateUserResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    delete:
      description: Deletes given user
      security:
        - ApiKeyAuth: []
      # used as the method name of the controller
      operationId: deleteUser
      tags:
      - "Users"
      parameters:
        - name: user
          in: body
          description: delete
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/DeleteUserResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      description: Gets all users
      security:
        - ApiKeyAuth: []
      # used as the method name of the controller
      operationId: getUser
      tags:
      - "Users"
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: array
            items:
            # a pointer to a definition
              $ref: "#/definitions/GetUserResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /users/balance/{username}:
    x-swagger-router-controller: users
    put:
      security:
        - ApiKeyAuth: []
      tags:
        - Balance
      summary: Updated balance
      description: Updates the balance
      operationId: updateBalance
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: name that need to be updated
          required: true
          type: string
        - in: body
          name: amount
          description: Updated user object
          required: true
          schema:
            $ref: '#/definitions/UpdateBalanceCredentials'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Invalid amount supplied
        '404':
          description: User balance not found
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Balance
      summary: Gets balance of user
      description: ''
      operationId: getBalance
      consumes:
        - application/json
        - application/xml
      produces:
        - application/xml
        - application/json
      parameters:
        - name: username
          in: path
          description: The user name for getting balance
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/User'
        '405':
          description: Invalid input
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/login:
    x-swagger-router-controller: authentication
    post:
      description: Authenticates a user with a pair of credentials and returns a sessionID
      operationId: login
      tags:
      - "Authentication"
      parameters:
        - name: credentials
          in: body
          description: Credentials to authentication the user with
          required: true
          schema:
            $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthenticationResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /authentication/logout:
    x-swagger-router-controller: authentication
    get:
      security:
        - ApiKeyAuth: []
      description: Logs out user
      operationId: logout
      tags:
      - "Authentication"
      parameters:
        - name: X-SESSION-ID
          in: header
          description: Session ID
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/AuthenticationResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products:
    x-swagger-router-controller: products
    get:
      security:
        - ApiKeyAuth: []
      description: Finds products
      operationId: getProducts
      tags:
      - "Products"
      parameters: []
      responses:
        "200":
          description: Success
          schema:
            type: 'array'
            items:
              # a pointer to a definition
              $ref: "#/definitions/Product"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
    post:
      security:
        - ApiKeyAuth: []
      description: Creates product
      operationId: createProduct
      tags:
      - "Products"
      parameters:
        - name: product
          required: true
          in: body
          description: adding product
          schema:
            $ref: "#/definitions/Product"
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/CreateProductResponse"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse" 
  /products/item:
    x-swagger-router-controller: products
    get:
      security:
        - ApiKeyAuth: []
      description: Get product with the given name
      operationId: findProduct
      tags:
      - "Products"
      parameters:
        - name: productName
          in: query
          description: Product name
          required: true
          type: string
      responses:
        "200":
          description: Success
          schema:
            # a pointer to a definition
            $ref: "#/definitions/Product"
        "401":
          description: Unauthorized
          schema:
            $ref: "#/definitions/ErrorResponse"
        # responses may fall through to errors
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products/buy:
    x-swagger-router-controller: products
    post:
      security:
        - ApiKeyAuth: []
      tags:
        - Store
      summary: Place an order
      description: ''
      operationId: placeOrder
      produces:
        - application/xml
        - application/json
      parameters:
        - name: purchase
          in: body
          description: order placed for purchasing
          required: true
          schema:
            $ref: '#/definitions/MakePurchase'
      responses:
        '200':
          description: successful operation
          schema:
            $ref: '#/definitions/Transaction'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /products/buy/{username}:
    x-swagger-router-controller: products
    get:
      security:
        - ApiKeyAuth: []
      tags:
        - Store
      summary: 'Gets transactions for user'
      operationId: getTransactions
      produces:
        - application/json
      parameters: 
        - in: path
          name: username
          required: true
          type: string
      responses:
        '200':
          description: successful operation
          schema:
            type: array
            items:
              $ref: '#/definitions/Transaction'
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  User:
    required:
      - username
      - password
    properties:
      username:
        type: string
        example: 'jwalker'
      password:
        type: string
        example: 'supersecret'
      fullname:
        type: string
        example: 'Johnny Walker'
      balance:
        type: number
        minimum: 0
  CreateUserResponse:
    properties:
      _id:
        type: string
        example: '123'
  CreateProductResponse:
    properties:
      _id:
        type: string
        example: '123'
  Credentials:
    required:
      - username
      - password
    properties:
      username:
        type: string
        example: 'jwalker'
      password:
        type: string
        example: 'supersecret'
  AuthenticationResponse:
    required:
      - sessionID
    properties:
      sessionID:
        type: string
        example: 'axd43xs'
  Product:
    required:
      - name
      - cost
    properties:
      name:
        type: string
        example: 'Avengers Infinity War'
      cost:
        type: integer
        format: int64
        example: 1234
  ErrorResponse:
    type: object
    required:
      - message
    properties:
      message:
        type: string
  DeleteUserResponse:
    required:
      - username
    properties:
      username:
        type: string
  GetUserResponse:
    required:
        - username
    properties:
      username:
        type: string
        example: 'jwalker'
  UpdateBalanceCredentials:
    required:
      - username
      - amount
    properties:
      username:
        type: string
        example: 'jwalker'
      amount:
        type: number
        minimum: 0
        example: 213
  Transaction:
    type: object
    required:
      - username
      - product
      - cost
      - date
    properties:
      username:
          type: string
      product:
        type: string
      cost:
        type: integer
        format: int64
      date:
        type: string
        format: date-time
    xml:
      name: Transaction
  MakePurchase:
    type: object
    required:
      - username
      - product
    properties:
      username:
        type: string
      product:
        type: string